// $Id: dbconnect.pgcc,v 1.26 2005/11/22 13:04:34 christof Exp $
/*  libcommonc++: ManuProC's main OO library
 *  Copyright (C) 1998-2000 Adolf Petig GmbH & Co. KG, written by Jacek Jakubowski
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include <ManuProCConfig.h>
#ifndef MPC_SQLITE
#include <cstdlib>
#include <cstdio>
#include <unistd.h>
#include <Misc/dbconnect.h>
#include <Misc/string0.h>
#include <Misc/Global_Settings.h>
#include <Misc/Ausgabe_neu.h>
#ifdef OLD_ECPG
#define ECPGdo300
#else
#define ECPGdo300 0,1,
#endif

static std::string current_db_name;

std::string ManuProC::get_dbname()
{ return current_db_name;
}

void ManuProC::dbconnect(const Connection &c) throw(SQLerror)
{  exec sql begin declare section;
   char connstr[100];
   char NAME[80];
   char *USR;
   char *PSW;
   exec sql end declare section;

   std::string host=c.Host();
   std::string db=c.Dbase();
   int port=c.Port();

   if(!c.Name().empty()) strncpy0(NAME,c.Name().c_str(),sizeof NAME);
   else strncpy0(NAME,db.c_str(),sizeof NAME);

#ifndef __MINGW32__
  if (host=="localhost" && port==POSTGRESQL_PORT) strncpy0(connstr,db.c_str(),sizeof connstr);
  else 
#endif
#if 0
     snprintf0(connstr,sizeof connstr,"tcp:postgresql://%s:%d/%s",
				host.c_str(),port,db.c_str());
#else     
     snprintf0(connstr,sizeof connstr,"%s@%s:%d",db.c_str(),host.c_str(),port);
#endif     
   
   char *opt(getenv("SQLOPT"));
   if (!opt) {} 
   else if (!strcmp(opt,"-X"))
   {  char fname[200];
      snprintf(fname,sizeof fname,"%s.sqllog",NAME);
      FILE *f=fopen(fname,"w");
      ECPGdebug(1,f);
   } 
   else if (!strcmp(opt,"-E"))
   {  ECPGdebug(1,stderr);
   }
   else if (!strcmp(opt,"-C")) 
   // also output ECPG activity when counting, because it is not counted
   {  ECPGdebug(1,stderr);
   }
   if(c.User().empty())
     exec sql connect to :connstr as :NAME;
   else
    {
     std::string us=c.User();
     std::string pass=c.Pass();
     USR=(char *)us.c_str();

     if(!pass.empty())
       {
        PSW=(char*)pass.c_str();
        exec sql connect to :connstr as :NAME USER :USR/:PSW;      
       }
     else
       exec sql connect to :connstr as :NAME USER :USR;
    }
   SQLerror::test("dbconnect");

   // this is not a server side call but a client side call
   exec sql at :NAME set autocommit to on;
   SQLerror::test("dbconnect,autocommit");

   // TODO: make this connection the default
   Query::Execute("set datestyle to 'ISO'");
   if(Ausgabe_neu::TeX_uses_UTF8)    
       Query::Execute("set names 'utf-8'");
   else
#ifndef PETIG_EXTENSIONS
       Query::Execute("set names 'latin1'");
#else
       Query::Execute("set names 'latin9'");
#endif
   Global_Settings::database_connected();
   current_db_name=NAME;
}

void ManuProC::dbdisconnect(const std::string &name) throw(SQLerror)
{  Global_Settings::database_connected(false);
   if (name.empty()) 
   {  exec sql disconnect; }
   else 
   {  exec sql begin declare section;
      const char *NAME;
      exec sql end declare section;
      NAME=name.c_str();
      
      exec sql disconnect :NAME;
      SQLerror::test("dbdisconnect");
   }
}

void ManuProC::dbdefault(const std::string &name) throw(SQLerror)
{  exec sql begin declare section;
   const char *NAME;
   exec sql end declare section;
   if (name.empty()) NAME=DEFAULT_DB;
   else NAME=name.c_str();
   
   // ex ec sql set connection to :NAME;
   // 8.1 does not parse this correctly, hand code it ...
   ECPGsetconn(__LINE__,NAME);
   SQLerror::test("dbdefault");
   current_db_name=name;
}

void ManuProC::setDTstyle(char *style) throw(SQLerror)
{
 exec sql begin declare section;
 char ST[80];
 exec sql end declare section;
 
 snprintf0(ST,sizeof ST,"set datestyle to '%s'",style);
 exec sql execute immediate :ST;
 // later ??
/* exec sql at petigdb set datestyle to :ST; */
 SQLerror::test("Datumsformat setzen");
}

#endif
